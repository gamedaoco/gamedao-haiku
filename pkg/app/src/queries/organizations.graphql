# get aggregate orgs and their names
# TODO: add slugs to graphql
query OrganizationVanityUrl($searchQuery: String="%") {
    organization {
        id
        name
    }
}

#   get organization member by state
#   e.g. `pending` to provide a list for prime to approve
subscription OrganizationMembersByState(
    $id: String!
    $state: String!
) {
    organization(where: { id: {_eq: $id}}) {
        id
        organization_members(where: { state: {_eq: $state}}) {
            address
            state
        }
    }
}

subscription OrganizationsPaginationCount($searchQuery: String="%") {
    organization_aggregate(where: {_or: [{name: {_ilike: $searchQuery}}, {description: {_ilike: $searchQuery}}]}) {
        aggregate {
            count
        }
    }
}

subscription OrganizationsPagination($orderBy: [organization_order_by!], $first: Int, , $searchQuery: String="%") {
    organization(limit: $first, order_by: $orderBy, where: {_or: [{name: {_ilike: $searchQuery}}, {description: {_ilike: $searchQuery}}]}) {
        id
        name
        description
        logo
        access_model
        creator
        organization_members {
            address
            state
        }
    }
}

query GetOrganizationByName($name: String!) {
    organization(where: { name: {_eq: $name}}) {
        id
        name
        slug
    }
}

query GetOrganizationById($id: String!) {
    organization(where: { id: {_eq: $id}}) {
        id
        name
        slug
    }
}

subscription OrganizationById($orgId: String!) {
    organization(where: { id: {_eq: $orgId}}) {
        access_model
        creator
        created_at_block
        creator
        fee_model
        fee_model
        gov_currency
        id
        member_limit
        pay_currency
        treasury
        type
        organization_members {
            address
            state
            identity {
                id
                email
                display_name
            }
        }
        description
        email
        id
        logo
        header
        name
        repo
        website
        url
        location
        tags
        organization_members_aggregate {
            aggregate {
                count
            }
        }
        campaigns_aggregate {
            aggregate {
                count
            }
            nodes {
                id
                state
            }
        }
        proposals_aggregate {
            nodes {
                id
                type
            }
            aggregate {
                count
            }
        }
    }
}
subscription AccountOrganizations($address: String!) {
    identity_by_pk(id: $address){
        id
        organization_members {
            id
            state
            organization {
                id
                name
                logo
                access_model
                creator
                organization_members {
                    address
                    identity {
                        display_name
                        image
                        email
                    }
                }
            }
        }
    }
}