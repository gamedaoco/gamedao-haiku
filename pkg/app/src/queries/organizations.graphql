subscription OrgNames($searchQuery: String="%") {
  organization {
    id
    organization_metadata {
      name
    }
  }
}

subscription OrganizationsPaginationCount($searchQuery: String="%") {
    organization_aggregate(where: {organization_metadata: {_or: [{name: {_ilike: $searchQuery}}, {description: {_ilike: $searchQuery}}]}}) {
        aggregate {
            count
        }
    }
}

subscription OrganizationsPagination($orderBy: [organization_order_by!], $first: Int, , $searchQuery: String="%") {
    organization(limit: $first, order_by: $orderBy, where: {organization_metadata: {_or: [{name: {_ilike: $searchQuery}}, {description: {_ilike: $searchQuery}}]}}) {
        id
        organization_metadata {
            name
            description
            logo
        }
        access_model
        creator
        organization_members{
            address
        }
    }
}

# subscription OrganizationByName($name: String!) {
#     organization(where: {organization_metadata: {name: {_eq: $name}}}) {
#         organization_metadata {
#             name
#             # TODO: add slug for resolver
#             # slug
#         }
#     }
# }

subscription OrganizationByName($name: String!) {
    organization(where: {organization_metadata: {name: {_eq: $name}}}) {
        access_model
        creator
        created_at_block
        creator
        fee_model
        fee_model
        gov_currency
        id
        member_limit
        pay_currency
        treasury
        type
        organization_members {
            address
            identity {
                id
                email
                display_name
            }
            # TODO:
            # state
        }
        organization_metadata {
            description
            email
            # TODO: cid
            id
            logo
            header
            name
            repo
            website
            # todo: add slug
        }
        organization_members_aggregate {
            aggregate {
                count
            }
        }
        campaigns_aggregate {
            aggregate {
                count
            }
            nodes {
                id
                state
            }
        }
        proposals_aggregate {
            nodes {
                id
                type
            }
            aggregate {
                count
            }
        }
    }
}

subscription OrganizationById($orgId: String!) {
    organization(where: { id: {_eq: $orgId}}) {
        access_model
        creator
        created_at_block
        creator
        fee_model
        fee_model
        gov_currency
        id
        member_limit
        pay_currency
        treasury
        type
        organization_members {
            address
            identity {
                id
                email
                display_name
            }
            # state
        }
        organization_metadata {
            description
            email
            id
            logo
            header
            name
            repo
            website
        }
        organization_members_aggregate {
            aggregate {
                count
            }
        }
        campaigns_aggregate {
            aggregate {
                count
            }
            nodes {
                id
                state
            }
        }
        proposals_aggregate {
            nodes {
                id
                type
            }
            aggregate {
                count
            }
        }
    }
}
subscription AccountOrganizations($address: String!) {
    identity_by_pk(id: $address){
        id
        organization_members {
            id
            organization {
                id
                organization_metadata {
                    name
                    logo
                }
                access_model
                creator
                organization_members {
                    address
                    identity {
                        display_name
                        image
                        email
                    }
                }
            }
        }
    }
}